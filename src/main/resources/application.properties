# Configuración básica de la aplicación
spring.application.name=api-gateway
server.port=8080

# Spring Cloud Config
spring.cloud.config.enabled=false
spring.cloud.compatibility-verifier.enabled=false

# Configuración de Eureka Client
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Configuración de Spring Cloud Gateway MVC
# Ruta para UsuarioApi - Autenticación (pública)
spring.cloud.gateway.mvc.routes[0].id=usuario-auth
spring.cloud.gateway.mvc.routes[0].uri=lb://usuario-microservice
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/api/auth/**

# Ruta para UsuarioApi - Usuarios y Roles (protegida)
spring.cloud.gateway.mvc.routes[1].id=usuario-service
spring.cloud.gateway.mvc.routes[1].uri=lb://usuario-microservice
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/api/usuarios/**, /api/roles/**

# Ruta para BlogApi (protegida)
spring.cloud.gateway.mvc.routes[2].id=blog-service
spring.cloud.gateway.mvc.routes[2].uri=lb://blog-service
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/api/blogs/**

# JWT Configuration - MISMA CLAVE QUE EN LOS MICROSERVICIOS
security.jwt.secret-key=Y/I5T3T1aSOP+BezsicbSiUtzIZWxdcOVnylSYlJl/H22uPQID8VGjfzc5U5cVhKA6qm17V2yMP/mlrlTIkb+g==

# URLs de los microservicios (para comunicación directa si es necesario)
usuario.api.url=http://localhost:8080
blog.api.url=http://localhost:8081

# Configuración de logging para debug
logging.level.com.ApiGateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG

# Configuración adicional para Spring Cloud LoadBalancer
spring.cloud.loadbalancer.ribbon.enabled=false